{"remainingRequest":"/Users/user/Documents/js/tabbysuprise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Documents/js/tabbysuprise/src/pages/Order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Documents/js/tabbysuprise/src/pages/Order.vue","mtime":1570786348713},{"path":"/Users/user/Documents/js/tabbysuprise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/js/tabbysuprise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Documents/js/tabbysuprise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/js/tabbysuprise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Api from \"@/Api\";\nimport store from \"@/util/store\";\nimport DatePick from \"vue-date-pick\";\nimport \"vue-date-pick/dist/vueDatePick.css\";\n\nexport default {\n  data() {\n    return {\n      loading: true,\n      posts: null,\n      friendName: \"Your Friend\",\n      errors: [],\n      date: \"\",\n      getQuoteText : \"Get Quote\",\n      isLocationApi: false,\n      orderPackage: {\n        name: \"\",\n        id: null\n      },\n      date: \"\",\n      orderData: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phonenumber: \"\",\n        location: \"\",\n        order: {\n          celebrant_name: \"\",\n          celebration_address: \"\",\n          celebration_type: \"\",\n          celebration_time: \"\",\n          other: null,\n          services: []\n        }\n      },\n      isFoodService: false,\n      isMusicService: false\n    };\n  },\n  created() {\n    let orderId = this.$route.params[\"id\"];\n    this.setCurrentOrder(orderId);\n  },\n  mounted: function() {\n    self = this;\n    window.initMap = function() {\n      self.initMap();\n    };\n    if (window.google && window.google.maps) {\n      self.initMap();\n      return;\n    }\n\n    var self = this;\n    var script = document.createElement(\"script\");\n    script.onload = function() {\n      if (!window.google && !window.google.maps)\n        return void console.error(\"no google maps script included\");\n      // self.create_map();\n    };\n\n    script.async = true;\n    script.defer = true;\n    script.src =\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDfLRjmAN2A44hiZ8bNGEXqpAtRGU0Q45k&callback=initMap\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  },\n  updated() {\n    this.token = store.state.token;\n  },\n  methods: {\n    setCurrentOrder: function(orderId) {\n      if (orderId == 1) {\n        this.orderPackage = { id: orderId, name: \"Birthday Suprise\" };\n      } else if (orderId == 2) {\n        this.orderPackage = { id: orderId, name: \"Wedding Suprises\" };\n      } else if (orderId == 3) {\n        this.orderPackage = { id: orderId, name: \"Custom Suprises\" };\n      }\n    },\n    makeOrder: function() {\n      let axios = store.state.axios;\n      axios\n        .post(\"/order\", this.orderData)\n        .then(response => {\n          if (response.data.status == 1) {\n            this.$router.push({name:'success'})\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          console.log(error.response);\n          this.errors = [\"There was an error in submitting your request\"];\n        });\n    },\n    setGeoLocation: function() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          this.showPosition,\n          this.showLocationError\n        );\n      } else {\n        this.setError(\n          \"Geolocation is not supported by this browser, Please try using chrome or update your browser\"\n        );\n      }\n    },\n    initMap: function() {\n      this.isLocationApi = true;\n    },\n    showPosition: function(position) {\n      if (this.isLocationApi) {\n        var latlon = position.coords.latitude + \",\" + position.coords.longitude;\n        var latlng = {\n          lat: parseFloat(position.coords.latitude),\n          lng: parseFloat(position.coords.longitude)\n        };\n        var geocoder = new window.google.maps.Geocoder();\n        let self = this;\n        geocoder.geocode({ location: latlng }, function(results, status) {\n          if (status === \"OK\") {\n            if (results[0]) {\n              self.orderData.location = results[0].formatted_address;\n            } else {\n              window.alert(\"No results found\");\n            }\n          } else {\n            window.alert(\"Geocoder failed due to: \" + status);\n          }\n        });\n      }\n    },\n    submitOrder: function(e) {\n      e.preventDefault();\n      this.getQuoteText = \"Getting Quote, Please wait.....\";\n      this.errors = [];\n      this.setServices();\n      \n      Object.keys(this.orderData).forEach((key, index) => {\n        if (this.orderData[key] == \"\") {\n          this.setError(key + \" is cannot be empty\");\n        }\n        if (key == \"order\") {\n          this.validateOrder(this.orderData[key]);\n        }\n      });\n      if (this.errors.length > 0) {\n        this.getQuoteText = \"Get Quote\";\n        return;\n      }\n      this.orderData.order.celebration_type = this.orderPackage.name;\n      this.makeOrder();\n      this.getQuoteText = \"Get Quote\";\n    },\n    setServices: function() {\n      this.orderData.order.services = [];\n      if (this.isFoodService) {\n        this.orderData.order.services.push(1);\n      }\n      if (this.isMusicService) {\n        this.orderData.order.services.push(2);\n      }\n    },\n    validateOrder: function(order) {\n      if (order.celebrant_name == \"\") {\n        this.setError(\"The celebrant name, we need it \");\n      }\n      if ((order.celbration_address = \"\")) {\n        this.setError(\"Where is the place of surprise ;)\");\n      }\n      if (order.celebration_time == \"\") {\n        this.setError(\n          \"24 hours is a long time, when would you have us be there?\"\n        );\n      }\n      if (order.services.length <= 0) {\n        this.setError(\"What service would you like us to offer to you?\");\n      }\n    },\n    showLocationError: function(error) {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          this.setError(\n            \"Hello friend, we need your location to proceed. Don't worry, we won't spam you ;)\"\n          );\n          break;\n        case error.POSITION_UNAVAILABLE:\n          this.setError(\"Location information is unavailable.\");\n          break;\n        case error.TIMEOUT:\n          this.setError(\"The request to get user location timed out.\");\n          break;\n        case error.UNKNOWN_ERROR:\n          this.setError(\"An unknown error occurred.\");\n          break;\n      }\n    },\n    setError(error) {\n      this.errors = [];\n      this.errors.push(error);\n    }\n  },\n  components: { DatePick }\n};\n",{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Order.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"section\">\n    <template>\n      <div>\n        <div class=\"container-contact100\">\n          <div class=\"wrap-contact100\">\n            <form class=\"contact100-form validate-form\">\n              <span class=\"contact100-form-title\">{{orderPackage.name}} for {{friendName}}</span>\n              <div\n                class=\"alert alert-danger\"\n                role=\"alert\"\n                v-if=\"errors.length > 0\"\n              >{{errors.join(\",\")}}</div>\n              <label class=\"label-input100\" for=\"first-name\">Tell us your name *</label>\n              <div\n                class=\"wrap-input100 rs1-wrap-input100 validate-input\"\n                data-validate=\"Type first name\"\n              >\n                <input\n                  id=\"first-name\"\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"first-name\"\n                  v-model=\"orderData.firstname\"\n                  placeholder=\"First name\"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <div\n                class=\"wrap-input100 rs2-wrap-input100 validate-input\"\n                data-validate=\"Type last name\"\n              >\n                <input\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"last-name\"\n                  v-model=\"orderData.lastname\"\n                  placeholder=\"Last name\"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n\n              <label class=\"label-input100\" for=\"email\">Enter your contact Details *</label>\n              <div\n                class=\"wrap-input100 rs1-wrap-input100 validate-input\"\n                data-validate=\"Valid email is required: ex@abc.xyz\"\n              >\n                <input\n                  id=\"email\"\n                  class=\"input100\"\n                  type=\"text\"\n                  v-model=\"orderData.email\"\n                  name=\"email\"\n                  placeholder=\"Email \"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <div class=\"wrap-input100 rs1-wrap-input100\">\n                <input\n                  id=\"phone\"\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"phone\"\n                  v-model=\"orderData.phonenumber\"\n                  placeholder=\"Phone Number\"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <label class=\"label-input100\" for=\"phone\">One Last Thing, Where are you at</label>\n              <div class=\"wrap-input100\">\n                <a\n                  class=\"btn btn-info btn-sm btn-outline\"\n                  v-on:click=\"setGeoLocation()\"\n                >Enable Location</a>\n                <input\n                  id=\"phone\"\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"address\"\n                  placeholder=\"Address\"\n                  :value=\"orderData.location\"\n                  disabled\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <hr />\n              <label class=\"label-input100\" for=\"phone\">Your Friend's Name</label>\n              <div class=\"wrap-input100\">\n                <input\n                  id=\"friend_name\"\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"friend_name\"\n                  v-model=\"orderData.order.celebrant_name\"\n                  placeholder=\"\"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <label class=\"label-input100\" for=\"phone\">What day is this surprise?</label>\n              <div class=\"wrap-input100\">\n                <date-pick\n                  v-model=\"orderData.order.celebration_time\"\n                  :format=\"'YYYY-MM-DD HH:mm:ss'\"\n                  :pickTime=\"true\"\n                ></date-pick>\n                <span class=\"focus-input100\"></span>\n              </div>\n              <label class=\"label-input100\" for=\"phone\">Where are we celebrating</label>\n              <div class=\"wrap-input100\">\n                <input\n                  id=\"celebrant.address\"\n                  class=\"input100\"\n                  type=\"text\"\n                  v-model=\"orderData.order.celebration_address\"\n                  placeholder=\"\"\n                />\n                <span class=\"focus-input100\"></span>\n              </div>\n              <label class=\"label-input100\" for=\"first-name\">How do you want the Surprise</label>\n              <div class=\"wrap-input100 rs1-wrap-input100 validate-input\" id=\"music-package\">\n                <label class=\"label-input100 package-service\">\n                  <input\n                    type=\"checkbox\"\n                    class=\"wrap-input100 rs2-wrap-input100 validate-input\"\n                    v-model=\"isMusicService\"\n                  /> Music\n                </label>\n                <span class=\"focus-input100\"></span>\n              </div>\n              <div\n                class=\"wrap-input100 rs2-wrap-input100 validate-input\"\n                data-validate=\"Type last name\"\n              >\n                <label class=\"label-input100 package-service\">\n                  <input\n                    type=\"checkbox\"\n                    class=\"wrap-input100 rs2-wrap-input100 validate-input\"\n                    v-model=\"isFoodService\"\n                  /> Food\n                </label>\n                <span class=\"focus-input100\"></span>\n              </div>\n\n              <label class=\"label-input100\" for=\"message\">Message *</label>\n              <div class=\"wrap-input100 validate-input\" data-validate=\"Message is required\">\n                <textarea\n                  id=\"message\"\n                  class=\"input100\"\n                  name=\"message\"\n                  v-model=\"orderData.order.other\"\n                  placeholder=\"Write us a message\"\n                ></textarea>\n                <span class=\"focus-input100\"></span>\n              </div>\n\n              <div class=\"container-contact100-form-btn\">\n                <button class=\"contact100-form-btn\" v-on:click=\"submitOrder($event)\">{{getQuoteText}}</button>\n              </div>\n            </form>\n\n            <div class=\"contact100-more flex-col-c-m\" id=\"background-suprise\">\n              <div class=\"flex-w size1 p-b-47\">\n                <div class=\"txt1 p-r-25\">\n                  <span class=\"lnr lnr-map-marker\"></span>\n                </div>\n                <div class=\"flex-col size2\">\n                  <span class=\"txt1 p-b-20\">Address</span>\n\n                  <span class=\"txt2\">Mada Center 8th floor, 379 Hudson St, New York, NY 10018 US</span>\n                </div>\n              </div>\n\n              <div class=\"dis-flex size1 p-b-47\">\n                <div class=\"txt1 p-r-25\">\n                  <span class=\"lnr lnr-phone-handset\"></span>\n                </div>\n\n                <div class=\"flex-col size2\">\n                  <span class=\"txt1 p-b-20\">Lets Talk</span>\n\n                  <span class=\"txt3\">+1 800 1236879</span>\n                </div>\n              </div>\n\n              <div class=\"dis-flex size1 p-b-47\">\n                <div class=\"txt1 p-r-25\">\n                  <span class=\"lnr lnr-envelope\"></span>\n                </div>\n\n                <div class=\"flex-col size2\">\n                  <span class=\"txt1 p-b-20\">General Support</span>\n\n                  <span class=\"txt3\">contact@example.com</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n <script src=\"https://maps.google.com/maps?file=api&amp;v=3&amp;sensor=false\"\n     type=\"text/javascript\"></script>\n<script>\nimport Api from \"@/Api\";\nimport store from \"@/util/store\";\nimport DatePick from \"vue-date-pick\";\nimport \"vue-date-pick/dist/vueDatePick.css\";\n\nexport default {\n  data() {\n    return {\n      loading: true,\n      posts: null,\n      friendName: \"Your Friend\",\n      errors: [],\n      date: \"\",\n      getQuoteText : \"Get Quote\",\n      isLocationApi: false,\n      orderPackage: {\n        name: \"\",\n        id: null\n      },\n      date: \"\",\n      orderData: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phonenumber: \"\",\n        location: \"\",\n        order: {\n          celebrant_name: \"\",\n          celebration_address: \"\",\n          celebration_type: \"\",\n          celebration_time: \"\",\n          other: null,\n          services: []\n        }\n      },\n      isFoodService: false,\n      isMusicService: false\n    };\n  },\n  created() {\n    let orderId = this.$route.params[\"id\"];\n    this.setCurrentOrder(orderId);\n  },\n  mounted: function() {\n    self = this;\n    window.initMap = function() {\n      self.initMap();\n    };\n    if (window.google && window.google.maps) {\n      self.initMap();\n      return;\n    }\n\n    var self = this;\n    var script = document.createElement(\"script\");\n    script.onload = function() {\n      if (!window.google && !window.google.maps)\n        return void console.error(\"no google maps script included\");\n      // self.create_map();\n    };\n\n    script.async = true;\n    script.defer = true;\n    script.src =\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDfLRjmAN2A44hiZ8bNGEXqpAtRGU0Q45k&callback=initMap\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  },\n  updated() {\n    this.token = store.state.token;\n  },\n  methods: {\n    setCurrentOrder: function(orderId) {\n      if (orderId == 1) {\n        this.orderPackage = { id: orderId, name: \"Birthday Suprise\" };\n      } else if (orderId == 2) {\n        this.orderPackage = { id: orderId, name: \"Wedding Suprises\" };\n      } else if (orderId == 3) {\n        this.orderPackage = { id: orderId, name: \"Custom Suprises\" };\n      }\n    },\n    makeOrder: function() {\n      let axios = store.state.axios;\n      axios\n        .post(\"/order\", this.orderData)\n        .then(response => {\n          if (response.data.status == 1) {\n            this.$router.push({name:'success'})\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          console.log(error.response);\n          this.errors = [\"There was an error in submitting your request\"];\n        });\n    },\n    setGeoLocation: function() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          this.showPosition,\n          this.showLocationError\n        );\n      } else {\n        this.setError(\n          \"Geolocation is not supported by this browser, Please try using chrome or update your browser\"\n        );\n      }\n    },\n    initMap: function() {\n      this.isLocationApi = true;\n    },\n    showPosition: function(position) {\n      if (this.isLocationApi) {\n        var latlon = position.coords.latitude + \",\" + position.coords.longitude;\n        var latlng = {\n          lat: parseFloat(position.coords.latitude),\n          lng: parseFloat(position.coords.longitude)\n        };\n        var geocoder = new window.google.maps.Geocoder();\n        let self = this;\n        geocoder.geocode({ location: latlng }, function(results, status) {\n          if (status === \"OK\") {\n            if (results[0]) {\n              self.orderData.location = results[0].formatted_address;\n            } else {\n              window.alert(\"No results found\");\n            }\n          } else {\n            window.alert(\"Geocoder failed due to: \" + status);\n          }\n        });\n      }\n    },\n    submitOrder: function(e) {\n      e.preventDefault();\n      this.getQuoteText = \"Getting Quote, Please wait.....\";\n      this.errors = [];\n      this.setServices();\n      \n      Object.keys(this.orderData).forEach((key, index) => {\n        if (this.orderData[key] == \"\") {\n          this.setError(key + \" is cannot be empty\");\n        }\n        if (key == \"order\") {\n          this.validateOrder(this.orderData[key]);\n        }\n      });\n      if (this.errors.length > 0) {\n        this.getQuoteText = \"Get Quote\";\n        return;\n      }\n      this.orderData.order.celebration_type = this.orderPackage.name;\n      this.makeOrder();\n      this.getQuoteText = \"Get Quote\";\n    },\n    setServices: function() {\n      this.orderData.order.services = [];\n      if (this.isFoodService) {\n        this.orderData.order.services.push(1);\n      }\n      if (this.isMusicService) {\n        this.orderData.order.services.push(2);\n      }\n    },\n    validateOrder: function(order) {\n      if (order.celebrant_name == \"\") {\n        this.setError(\"The celebrant name, we need it \");\n      }\n      if ((order.celbration_address = \"\")) {\n        this.setError(\"Where is the place of surprise ;)\");\n      }\n      if (order.celebration_time == \"\") {\n        this.setError(\n          \"24 hours is a long time, when would you have us be there?\"\n        );\n      }\n      if (order.services.length <= 0) {\n        this.setError(\"What service would you like us to offer to you?\");\n      }\n    },\n    showLocationError: function(error) {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          this.setError(\n            \"Hello friend, we need your location to proceed. Don't worry, we won't spam you ;)\"\n          );\n          break;\n        case error.POSITION_UNAVAILABLE:\n          this.setError(\"Location information is unavailable.\");\n          break;\n        case error.TIMEOUT:\n          this.setError(\"The request to get user location timed out.\");\n          break;\n        case error.UNKNOWN_ERROR:\n          this.setError(\"An unknown error occurred.\");\n          break;\n      }\n    },\n    setError(error) {\n      this.errors = [];\n      this.errors.push(error);\n    }\n  },\n  components: { DatePick }\n};\n</script>\n<style>\n@import \"@/../../assets/order/css/main.css\";\n@import \"@/../../assets/order/css/util.css\";\n/*@import 'node_modules/@livelybone/vue-datepicker/lib/css/index.css';*/\np {\n  margin-left: 25%;\n  font-size: 16px;\n}\n#background-suprise {\n  background-image: url(\"@/../../assets/images/custom/9.jpg\");\n}\n#order-button {\n  margin-left: 25% !important;\n  margin-bottom: 12px;\n  margin-top: 0px !important;\n}\n#music-package {\n  border-right: none;\n}\n#home {\n  display: none !important;\n}\n\n.vdpComponent.vdpWithInput > input[type=\"text\"] {\n  display: block;\n  width: 100%;\n  background: transparent;\n  font-family: Poppins-Regular;\n  font-size: 18px;\n  color: #666666;\n  padding: 20px;\n  line-height: 1.2;\n}\n</style>"]}]}