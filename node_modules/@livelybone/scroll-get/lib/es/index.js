/**
 * Bundle of @livelybone/scroll-get
 * Generated: 2019-07-28
 * Version: 3.4.2
 * License: MIT
 * Author: livelybone(2631541504@qq.com)
 */

function getRect(el) {
  return el.getBoundingClientRect()
}

function posRelativeToPage(el) {
  var o = { pageLeft: 0, pageTop: 0 };
  while (el) {
    o.pageLeft += el.offsetLeft;
    o.pageTop += el.offsetTop;
    el = el.offsetParent;
  }
  return o
}

function posRelativeToClient(el) {
  var rect = getRect(el);
  return { clientLeft: rect.left, clientTop: rect.top }
}

function getNativeScrollbarWidth(el) {
  el = el || window;
  var isWindow = el === window;
  try {
    var info = isWindow ? window.nativeScrollbarWidth : null;
    if (!(
      info
      && typeof info.y === 'number'
      && typeof info.x === 'number'
    )) {
      // If nativeScrollbarWidth is illegal, reset it
      var wrapper = isWindow ? document.createElement('div') : el;
      if (isWindow) {
        wrapper.setAttribute('style', 'position:fixed;top:0;left:0;opacity:0;pointer-events:none;width:200px;height:200px;overflow:scroll');
        document.body.appendChild(wrapper);
      }
      info = {
        y: wrapper.offsetWidth - wrapper.clientWidth,
        x: wrapper.offsetHeight - wrapper.clientHeight,
      };
      if (isWindow) {
        window.nativeScrollbarWidth = info;
        document.body.removeChild(wrapper);
      }
    }
    return info
  } catch (e) {
    // For server render
    return { y: 17, x: 17 }
  }
}

export { getNativeScrollbarWidth, getRect, posRelativeToClient, posRelativeToPage };
